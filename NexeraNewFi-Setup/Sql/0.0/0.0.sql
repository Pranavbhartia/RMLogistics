-- MySQL Script generated by MySQL Workbench
-- 02/23/15 15:07:05
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema newfi
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema newfi
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `newfi` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `newfi` ;

-- -----------------------------------------------------
-- Table `newfi`.`UserRole`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`UserRole` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_cd` VARCHAR(45) NULL,
  `role_description` VARCHAR(500) NULL,
  `modified_by` INT NULL,
  `modified_date` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`User`
-- -----------------------------------------------------
CREATE TABLE `user` (
  `userid` int(11) NOT NULL AUTO_INCREMENT,
  `first_name` varchar(45) DEFAULT NULL,
  `last_name` varchar(45) DEFAULT NULL,
  `email_id` varchar(45) NOT NULL,
  `username` varchar(45) NOT NULL,
  `password` varchar(45) NOT NULL,
  `user_role` int(11) DEFAULT NULL,
  `priPhone` varchar(45) DEFAULT NULL,
  `secPhone` varchar(45) DEFAULT NULL,
  `dob` varchar(45) DEFAULT NULL,
  `streetAddress` varchar(255) DEFAULT NULL,
  `city` varchar(45) DEFAULT NULL,
  `state` varchar(45) DEFAULT NULL,
  `zip` varchar(45) DEFAULT NULL,
  `photoPath` varchar(255) DEFAULT NULL,
  `status` int(2) DEFAULT NULL,
  PRIMARY KEY (`userid`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8;



-- -----------------------------------------------------
-- Table `newfi`.`LoanTypeMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanTypeMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan_type_cd` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanTypeModfdUser_idx` (`modified_by` ASC),
  CONSTRAINT `FK_loanTypeModfdUser`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanStatusMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanStatusMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan_status_cd` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanTypeModfdUser_idx` (`modified_by` ASC),
  CONSTRAINT `FK_loanStatusModfdUser`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`PropertyTypeMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`PropertyTypeMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `property_type_cd` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_propertyTypeModfdUser_idx` (`modified_by` ASC),
  CONSTRAINT `FK_propertyTypeModfdUser`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`Loan`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`Loan` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  `loan_type` INT NOT NULL,
  `created_date` DATETIME NULL,
  `modified_date` DATETIME NULL,
  `loan_status` INT NOT NULL,
  `deleted` TINYINT NULL DEFAULT 0,
  `property_type` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanMappedToUser_idx` (`user` ASC),
  INDEX `FK_loanMappedToType_idx` (`loan_type` ASC),
  INDEX `FK_loanMappedToStatus_idx` (`loan_status` ASC),
  INDEX `fk_Loan_PropertyType1_idx` (`property_type` ASC),
  CONSTRAINT `FK_loanMappedToUser`
    FOREIGN KEY (`user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanMappedToType`
    FOREIGN KEY (`loan_type`)
    REFERENCES `newfi`.`LoanTypeMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanMappedToStatus`
    FOREIGN KEY (`loan_status`)
    REFERENCES `newfi`.`LoanStatusMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Loan_PropertyType1`
    FOREIGN KEY (`property_type`)
    REFERENCES `newfi`.`PropertyTypeMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanParamMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanParamMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `param_code` VARCHAR(45) NULL,
  `description` VARCHAR(500) NULL,
  `mandatory` TINYINT NULL,
  `param_data_type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanParam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanParam` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `param` INT NOT NULL,
  `loan` INT NOT NULL,
  `numeric_value` DOUBLE NULL,
  `string_value` BLOB NULL,
  `modified_user` INT NULL,
  `modified_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanParamLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loamParamLinkedToModfdUser_idx` (`modified_user` ASC),
  INDEX `FK_loanParamLinkedToParam_idx` (`param` ASC),
  CONSTRAINT `FK_loanParamLinkedToLoan`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loamParamLinkedToModfdUser`
    FOREIGN KEY (`modified_user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanParamLinkedToParam`
    FOREIGN KEY (`param`)
    REFERENCES `newfi`.`LoanParamMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`UserNotification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`UserNotification` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `notification_type` VARCHAR(45) NULL,
  `created_by` INT NULL,
  `created_date` DATETIME NULL,
  `read` TINYINT NULL,
  `remind_on` DATETIME NULL,
  `priority` VARCHAR(45) NULL,
  `title` VARCHAR(100) NULL,
  `content` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_notfnLinkedToUser_idx` (`user` ASC),
  INDEX `FK_notfnCreatedByUser_idx` (`created_by` ASC),
  CONSTRAINT `FK_notfnLinkedToUser`
    FOREIGN KEY (`user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_notfnCreatedByUser`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`Group`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`Group` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `group_code` VARCHAR(45) NULL,
  `description` BLOB NULL,
  `created_date` DATETIME NULL,
  `created_by` INT NULL,
  `modified_by` INT NULL,
  `modified_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_groupCreatedBy_idx` (`created_by` ASC),
  INDEX `FK_groupModifedBy_idx` (`modified_by` ASC),
  CONSTRAINT `FK_groupCreatedBy`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_groupModifedBy`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`UserGroup`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`UserGroup` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `group` INT NOT NULL,
  `added_date` DATETIME NULL,
  `added_by` INT NULL,
  `modified_by` INT NULL,
  `modified_date` DATETIME NULL,
  `active` TINYINT NULL DEFAULT 1,
  PRIMARY KEY (`id`),
  INDEX `FK_groupMemberAddedBy_idx` (`added_by` ASC),
  INDEX `FK_groupMemberModifedBy_idx` (`modified_by` ASC),
  CONSTRAINT `FK_groupMemberAddedBy`
    FOREIGN KEY (`added_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_groupMemberModifedBy`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanTeam`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanTeam` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan` INT NOT NULL,
  `assigned_by` INT NULL,
  `assigned_on` DATETIME NULL,
  `active` TINYINT NULL DEFAULT 1,
  `permission_type` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanFileTeamLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loanFileTeamAddedBy_idx` (`assigned_by` ASC),
  CONSTRAINT `FK_loanFileTeamLinkedToLoan`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanFileTeamAddedBy`
    FOREIGN KEY (`assigned_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`NeedsListMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`NeedsListMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NULL,
  `need_category` VARCHAR(45) NULL,
  `loan_type` INT NULL,
  `description` VARCHAR(500) NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  `sample_file_url` VARCHAR(500) NULL,
  `mandatory` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `FK_attachmentTypeModfdUser_idx` (`modified_by` ASC),
  INDEX `fk_needTypeToLoanType_idx` (`loan_type` ASC),
  CONSTRAINT `FK_attachmentTypeModfdUser`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_needTypeToLoanType`
    FOREIGN KEY (`loan_type`)
    REFERENCES `newfi`.`LoanTypeMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanNeedsList`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanNeedsList` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user` INT NOT NULL,
  `loan_file` INT NULL,
  `need_type` INT NOT NULL,
  `file_id` VARCHAR(500) NULL,
  `file_url` VARCHAR(1000) NULL,
  `comments` VARCHAR(200) NULL,
  `uploaded_date` DATETIME NULL,
  `uploaded_by` INT NOT NULL,
  `deleted` TINYINT NULL DEFAULT 0,
  PRIMARY KEY (`id`),
  INDEX `fk_User_Attachment_User1_idx` (`user` ASC),
  INDEX `fk_User_Attachment_Loan_File1_idx` (`loan_file` ASC),
  INDEX `fk_User_Attachment_Attachment_Type1_idx` (`need_type` ASC),
  INDEX `fk_userAttachment_uploadedBy_idx` (`uploaded_by` ASC),
  CONSTRAINT `fk_User_Attachment_User1`
    FOREIGN KEY (`user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Attachment_Loan_File1`
    FOREIGN KEY (`loan_file`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_Attachment_Attachment_Type1`
    FOREIGN KEY (`need_type`)
    REFERENCES `newfi`.`NeedsListMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_userAttachment_uploadedBy`
    FOREIGN KEY (`uploaded_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanRate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanRate` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan` INT NOT NULL,
  `value` DOUBLE NULL,
  `comments` VARCHAR(45) NULL,
  `modified_user` INT NULL,
  `modified_date` DATETIME NULL,
  `last_cached_time` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanParamLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loamParamLinkedToModfdUser_idx` (`modified_user` ASC),
  CONSTRAINT `FK_loanRateLinkedToLoan0`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loamRateLinkedToModfdUser0`
    FOREIGN KEY (`modified_user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanApplicationFee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanApplicationFee` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan` INT NOT NULL,
  `fee` DOUBLE NULL DEFAULT 0,
  `comments` VARCHAR(45) NULL,
  `modified_user` INT NULL,
  `modified_date` DATETIME NULL,
  `payment_type` VARCHAR(45) NULL,
  `payment_date` DATETIME NULL,
  `transaction_id` VARCHAR(500) NULL,
  `transaction_metadata` VARCHAR(500) NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_loanAppFeeLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loanAppFeeLinkedToModfdUser_idx` (`modified_user` ASC),
  CONSTRAINT `FK_loanAppFeeLinkedToLoan00`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loamAppFeeLinkedToModfdUser00`
    FOREIGN KEY (`modified_user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanAlert`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanAlert` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan` INT NULL,
  `alert_type` VARCHAR(45) NULL,
  `created_by` INT NULL,
  `created_for` INT NULL,
  `created_date` DATETIME NULL,
  `read` TINYINT NULL,
  `remind_on` DATETIME NULL,
  `priority` VARCHAR(45) NULL,
  `title` VARCHAR(100) NULL,
  `content` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_alertCreatedByUser_idx` (`created_by` ASC),
  INDEX `FK_loanAlertLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loanAlertCreatedForUser_idx` (`created_for` ASC),
  CONSTRAINT `FK_loanAlertCreatedByUser0`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanAlertLinkedToLoan`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanAlertCreatedForUser`
    FOREIGN KEY (`created_for`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanCommunication`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanCommunication` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan` INT NULL,
  `communication_type` VARCHAR(45) NULL,
  `created_by` INT NULL,
  `created_for` INT NULL,
  `created_date` DATETIME NULL,
  `read` TINYINT NULL,
  `priority` VARCHAR(45) NULL,
  `title` VARCHAR(100) NULL,
  `content` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_commCreatedByUser_idx` (`created_by` ASC),
  INDEX `FK_commAlertLinkedToLoan_idx` (`loan` ASC),
  INDEX `FK_loanCommunicationCreatedForUser_idx` (`created_for` ASC),
  CONSTRAINT `FK_loanCommunicationCreatedByUser00`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanCommunicationLinkedToLoan0`
    FOREIGN KEY (`loan`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanCommunicationCreatedForUser`
    FOREIGN KEY (`created_for`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`LoanCommunicationReply`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`LoanCommunicationReply` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `loan_communication` INT NULL,
  `created_by` INT NULL,
  `created_date` DATETIME NULL,
  `read` TINYINT NULL,
  `priority` VARCHAR(45) NULL,
  `title` VARCHAR(100) NULL,
  `content` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_commReplyCreatedByUser_idx` (`created_by` ASC),
  INDEX `FK_loanCommunicationReplyLinkedToComm_idx` (`loan_communication` ASC),
  CONSTRAINT `FK_loanCommunicationReplyCreatedByUser`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanCommunicationReplyLinkedToComm`
    FOREIGN KEY (`loan_communication`)
    REFERENCES `newfi`.`LoanCommunication` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`UserNote`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`UserNote` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `entity_type` VARCHAR(45) NOT NULL,
  `entity_id` INT NOT NULL,
  `note_type` VARCHAR(45) NULL,
  `created_by` INT NULL,
  `created_for` INT NULL,
  `created_date` DATETIME NULL,
  `read` TINYINT NULL,
  `priority` VARCHAR(45) NULL,
  `title` VARCHAR(100) NULL,
  `content` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_noteCreatedByUser_idx` (`created_by` ASC),
  INDEX `FK_noteLinkedToLoan_idx` (`entity_type` ASC),
  INDEX `FK_noteCreatedForUser_idx` (`created_for` ASC),
  CONSTRAINT `FK_loanNoteCreatedByUser00`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanNoteLinkedToLoan0`
    FOREIGN KEY (`entity_type`)
    REFERENCES `newfi`.`Loan` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_loanNoteCreatedForUser0`
    FOREIGN KEY (`created_for`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`AppSetting`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`AppSetting` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NULL,
  `description` VARCHAR(45) NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_appSettingModfdUsr_idx` (`modified_by` ASC),
  CONSTRAINT `FK_AppSettingModfdUser0`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`EmailTemplate`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`EmailTemplate` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `code` VARCHAR(45) NULL,
  `name` VARCHAR(100) NULL,
  `description` VARCHAR(500) NULL,
  `hml_content` BLOB NULL,
  `subject` VARCHAR(500) NULL,
  `from` VARCHAR(500) NULL,
  `modified_by` INT NULL,
  `modified_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_emailTmplModfdUsr_idx` (`modified_by` ASC),
  CONSTRAINT `FK_emailTmplModfdUsr`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`UserEmail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`UserEmail` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `user` INT NULL,
  `email_template` INT NULL,
  `created_by` INT NULL,
  `to` VARCHAR(100) NULL,
  `created_date` DATETIME NULL,
  `status` TINYINT NULL,
  `priority` VARCHAR(45) NULL,
  `token_map` BLOB NULL COMMENT 'kv of tokens sent for email',
  PRIMARY KEY (`id`),
  INDEX `fk_emailSentBy_idx` (`created_by` ASC),
  INDEX `fk_emailSentWithTemplate_idx` (`email_template` ASC),
  CONSTRAINT `fk_emailSentBy`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_emailSentTo`
    FOREIGN KEY (`user`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_emailSentWithTemplate`
    FOREIGN KEY (`email_template`)
    REFERENCES `newfi`.`EmailTemplate` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`WorkflowItemMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`WorkflowItemMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `workflow_item_type` VARCHAR(45) NULL,
  `description` VARCHAR(500) NULL,
  `task_name` VARCHAR(500) NOT NULL,
  `created_date` DATETIME NULL,
  `created_by` INT NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  `on_success` INT NOT NULL,
  `on_failure` INT NULL,
  `max_run_time` INT NULL,
  `start_delay` INT NULL,
  `is_last_task` TINYINT NOT NULL DEFAULT 0,
  `priority` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_wfItemCreatedBy_idx` (`created_by` ASC),
  INDEX `fk_wfItemModifiedBy_idx` (`modified_by` ASC),
  INDEX `fk_wfItemOnSuccess_idx` (`on_success` ASC),
  INDEX `fk_wfItemOnFailure_idx` (`on_failure` ASC),
  CONSTRAINT `fk_wfItemCreatedBy`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfItemModifiedBy`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfItemOnSuccess`
    FOREIGN KEY (`on_success`)
    REFERENCES `newfi`.`WorkflowItemMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfItemOnFailure`
    FOREIGN KEY (`on_failure`)
    REFERENCES `newfi`.`WorkflowItemMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`WorkflowMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`WorkflowMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(100) NOT NULL,
  `description` VARCHAR(500) NULL,
  `workflow_type` VARCHAR(45) NULL,
  `start_with` INT NULL,
  `created_date` DATETIME NULL,
  `created_by` INT NULL,
  `modified_date` DATETIME NULL,
  `modified_by` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_wfmasterCreatedBy_idx` (`created_by` ASC),
  INDEX `fk_wfmasterModifiedBy_idx` (`modified_by` ASC),
  INDEX `fk_wfStartWithItem_idx` (`start_with` ASC),
  CONSTRAINT `fk_wfmasterCreatedBy`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfmasterModifiedBy`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfStartWithItem`
    FOREIGN KEY (`start_with`)
    REFERENCES `newfi`.`WorkflowItemMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`Workflow`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`Workflow` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `workflow` INT NULL,
  `status` VARCHAR(550) NULL,
  `created_by` INT NULL,
  `created_time` DATETIME NULL,
  `last_updated_time` DATETIME NULL,
  `current_executing_item` INT NULL,
  `meta` BLOB NULL,
  `execution_complete_time` DATETIME NULL,
  `summary` VARCHAR(100) NULL,
  `active` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_workflowExMappedToWf_idx` (`workflow` ASC),
  INDEX `fk_wfExCreatedBy_idx` (`created_by` ASC),
  CONSTRAINT `fk_workflowExMappedToWf`
    FOREIGN KEY (`workflow`)
    REFERENCES `newfi`.`WorkflowMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfExCreatedBy`
    FOREIGN KEY (`created_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`WorkflowItem`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`WorkflowItem` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `workflow_item` INT NOT NULL,
  `parent_workflow` INT NOT NULL,
  `creation_date` DATETIME NULL,
  `status` TINYINT NULL,
  `success` TINYINT NULL,
  `start_time` DATETIME NULL,
  `completion_time` INT NULL,
  `modified_date` DATETIME NULL,
  `params` BLOB NULL,
  `result` BLOB NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_wfitemExMappedToItem_idx` (`workflow_item` ASC),
  INDEX `fk_wfItemExMappedToParent_idx` (`parent_workflow` ASC),
  CONSTRAINT `fk_wfitemExMappedToItem`
    FOREIGN KEY (`workflow_item`)
    REFERENCES `newfi`.`WorkflowItemMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_wfItemExMappedToParent`
    FOREIGN KEY (`parent_workflow`)
    REFERENCES `newfi`.`Workflow` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`JobMaster`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`JobMaster` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(45) NULL,
  `job_type` VARCHAR(45) NULL,
  `task_name` VARCHAR(45) NOT NULL,
  `active` TINYINT NULL,
  `repeat_interval` INT NULL,
  `repeat_interval_scheme` VARCHAR(45) NULL,
  `modified_by` INT NULL,
  `modified_date` DATETIME NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_jobMasterModifiedBy_idx` (`modified_by` ASC),
  CONSTRAINT `fk_jobMasterModifiedBy`
    FOREIGN KEY (`modified_by`)
    REFERENCES `newfi`.`User` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `newfi`.`Job`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `newfi`.`Job` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `job` INT NOT NULL,
  `start_time` DATETIME NULL,
  `end_time` DATETIME NULL,
  `status` VARCHAR(45) NULL,
  `params` VARCHAR(45) NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_jobLinkedToJobMaster_idx` (`job` ASC),
  CONSTRAINT `fk_jobLinkedToJobMaster`
    FOREIGN KEY (`job`)
    REFERENCES `newfi`.`JobMaster` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
